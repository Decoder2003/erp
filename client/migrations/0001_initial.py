# Generated by Django 4.2.10 on 2024-02-18 17:36

import client.managers
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_image', models.ImageField(upload_to='static/')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('summary', models.TextField(max_length=250)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('role', models.CharField(choices=[('STUDENT', 'student'), ('STAFF', 'staff'), ('ALUMNI', 'alumni')], default='STUDENT', max_length=10)),
                ('phone_number', models.IntegerField(max_length=10, unique=True)),
                ('rp_token', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_logged', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', client.managers.UserManager()),
            ],
        ),
    ]
